// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#EFEFF4",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 20,
                "marginVertical": 8,
              }
            }
          >
            TargetTime is: 01:00
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 20,
                "marginVertical": 8,
              }
            }
          >
            This is TimerScreen: 00:00
          </Text>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#F0F",
                  "fontSize": 30,
                  "marginLeft": 7,
                }
              }
            >
              Start
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#F0F",
                  "fontSize": 30,
                  "marginLeft": 7,
                }
              }
            >
              Reset
            </Text>
          </View>
          <View
            indeterminate={false}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <ARTSurfaceView
              style={
                Array [
                  Object {
                    "transform": Array [
                      Object {
                        "rotate": "0deg",
                      },
                    ],
                  },
                  Object {
                    "height": 150,
                    "width": 150,
                  },
                ]
              }
            >
              <ARTShape
                d={
                  Array [
                    0,
                    75,
                    75,
                    2,
                    75,
                    1,
                    2,
                    75,
                    1,
                    2,
                    75,
                    75,
                  ]
                }
                fill={
                  Array [
                    0,
                    0,
                    0.47843137254901963,
                    1,
                    1,
                  ]
                }
                opacity={1}
                stroke={null}
                strokeCap={1}
                strokeDash={null}
                strokeJoin={1}
                strokeWidth={1}
                transform={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
              />
              <ARTShape
                d={
                  Array [
                    0,
                    0.5,
                    0.5,
                    0,
                    75,
                    0.5,
                    4,
                    75,
                    75,
                    74.5,
                    -1.5707963267948966,
                    1.5707963267948966,
                    1,
                    4,
                    75,
                    75,
                    74.5,
                    1.5707963267948966,
                    -1.5707963267948966,
                    1,
                    1,
                  ]
                }
                fill={null}
                opacity={1}
                stroke={
                  Array [
                    0,
                    0.47843137254901963,
                    1,
                    1,
                  ]
                }
                strokeCap={0}
                strokeDash={null}
                strokeJoin={1}
                strokeWidth={1}
                transform={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
              />
            </ARTSurfaceView>
          </View>
        </View>
      </View>
    </View>
    <View
      collapsable={undefined}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "backgroundColor": "#F7F7F7",
          "borderBottomColor": "#A7A7AA",
          "borderBottomWidth": 0.5,
          "height": 64,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
        }
      }
    >
      <View
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={undefined}
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "bottom": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "left": 70,
                "opacity": 1,
                "position": "absolute",
                "right": 70,
                "top": 0,
              }
            }
          >
            <Text
              accessibilityTraits="header"
              accessible={true}
              allowFontScaling={true}
              collapsable={undefined}
              ellipsizeMode="tail"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgba(0, 0, 0, .9)",
                  "fontSize": 17,
                  "fontWeight": "700",
                  "marginHorizontal": 16,
                  "textAlign": "center",
                }
              }
            >
              Plank Timer
            </Text>
          </View>
          <View
            collapsable={undefined}
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "bottom": 0,
                "flexDirection": "row",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "top": 0,
              }
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={null}
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 20,
                    "marginVertical": 8,
                  }
                }
              >
                Log
              </Text>
            </View>
          </View>
          <View
            collapsable={undefined}
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "bottom": 0,
                "flexDirection": "row",
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={null}
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={null}
              >
                Config
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
